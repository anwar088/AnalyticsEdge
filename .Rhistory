library("ISLR", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
library("mice", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
colnames(train)[1:10]
test <- cbind(test[1:7],test.Happy,test[8:109])
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
merged <- rbind(train,test)
imputedMerged <- complete(mice(merged))
merged <- rbind(train,test)
merged$YOB[merged$YOB==2039] <- NA
imputedMerged <- complete(mice(merged))
set.seed(144)
imputedMerged <- complete(mice(merged))
imputedMergedrows <- nrow(imputedMerged)
imputedMerged$kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$kids)
imputedMerged$relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$relation)
colnames(imputedMerged)[1:10]
imputedMerged <- cbind(imputedMerged[,1],imputedMerged[,8],imputedMerged[,2:7],imputedMerged[,9:112])
colnames(imputedMerged[,1:10])
imputedMerged <- complete(mice(merged))
imputedMerged$kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$kids)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$kids)
imputedMerged$kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$kids)
imputedMerged$relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$relation)
colnames(imputedMerged[,1:10])
colnames(imputedMerged[,111:112])
imputedMerged$kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$kids)
imputedMerged$relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$relation)
colnames(imputedMerged[,111:112])
imputedMerged$Kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$Kids)
imputedMerged$Relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$relation)
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$relation)
table(imputedMerged$Relation)
colnames(imputedMerged[,111:112])
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,111:112])
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,111:112])
rm(imputedMerged)
set.seed(144)
imputedMerged <- complete(mice(merged))
imputedMergedrows <- nrow(imputedMerged)
imputedMerged$Kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$Kids)
imputedMerged$Relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$Relation)
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,111:112])
combinedData <- cbind(imputedMerged[,1],imputedMerged[,7],,imputedMerged[,111:112]imputedMerged[,2:6],imputedMerged[,2:110])
combinedData <- cbind(imputedMerged[,1],imputedMerged[,7],imputedMerged[,111:112]imputedMerged[,2:6],imputedMerged[,2:110])
combinedData <- cbind(imputedMerged[,1],imputedMerged[,7],imputedMerged[,111:112],imputedMerged[,2:6],imputedMerged[,2:110])
colnames(combinedData[,1:10])
colnames(imputedMerged[,1:10])
colnames(merged[,1:10])
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
imputedMergedrows <- nrow(imputedMerged)
imputedMerged$Kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$Kids)
imputedMerged$Relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$Relation)
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,1:10])
predHappy2 <- cbind(imputedMerged$UserID[4620:6599],1*(imputedMerged$Happy[4620:6599]))
head(predHappy2)
write.csv(predHappy2,"predHappyBin.csv")
train <- imputedMerged[,1:4619]
train <- imputedMerged[1:4619,]
table(train$HouseholdStatus)
colnames(imputedMerged[,1:10])
newTrain <- cbind(imputedMerged$UserID[1:4619],imputedMerged$Happy[1:4619],imputedMerged$Kids[1:4619],imputedMerged$Relation[1:4619],imputedMerged[1:4619,2:6],imputedMerged[1:4619,8:110])
colnames(newTrain[,1:10])
newData <- cbind(imputedMerged$UserID,imputedMerged$Happy,imputedMerged$Kids,imputedMerged$Relation,imputedMerged[,2:6],imputedMerged[,8:110])
colnames(newTrain[,1:4]) <- c("UserID","Happy","Kids","Relation")
colnames(newTrain[,1:20])
colnames(newTrain)[1:4] <- c("UserID","Happy","Kids","Relation")
colnames(newTrain[,1:20])
newData <- cbind(imputedMerged$UserID,imputedMerged$Happy,imputedMerged$Kids,imputedMerged$Relation,imputedMerged[,2:6],imputedMerged[,8:110])
colnames(newData)[1:4] <- c("UserID","Happy","Kids","Relation")
colnames(newData[,1:20])
test <- newData[4620:6599,]
train <- newData[1:4619,]
table(train$HouseholdStatus)
table(train$Kids)
attach(train)
tree.happy=tree(Happy~. ,data=train)
plot(tree.happy)
summary(tree.happy)
text(tree.happy,pretty=0)
tree.happy
test$Happy <- rep(NA,1980)
test.pred=predict(tree.happy,newdata=test)
output <- cbind(test$UserID,test.pred)
write.csv(output,"tree.csv")
head(output)
traintrain=sample(1:nrow(train),2254)
train.happy=train[traintrain,]
test.happy=train[-traintrain,]
train.tree=tree(Happy~.,data=train.happy)
plot(train.tree);text(train.tree,pretty=0)
test.pred=predict(train.tree,newdata=test.happy)
with(test.happy,table(1*(test.pred>.5),Happy))
(331+1129)/(331+1129+175+730)
baseline <- sum(test.happy$Happy)/2365
table(train.happy$YOB)
library("MASS", lib.loc="C:/Program Files/R/R-3.0.2/library")
set.seed(101)
dim(train)
summary(train)
train.sample=sample(1:nrow(train),2365)
train.train=train[train.sample,]
train.sample=sample(1:nrow(train),2254)
train.train=train[train.sample,]
rf.traintrain=randomForest(Happy~.,data=train[,2:112],subset=train.sample)
rf.traintrain
sum(rf.traintrain$importance>20)
rf.traintrain$importance[rf.traintrain$importance>20]
oob.err=double(7)
test.err=double(7)
for(mtry in 1:7){
fit=randomForest(Happy~.,data=train[2:110],subset=train.sample,mtry=mtry,ntree=400)
oob.err[mtry]=fit$mse[400]
pred=predict(fit,train[-train.sample,])
test.err[mtry]=with(train[-train.sample,],mean((Happy-pred)^2))
cat(mtry," ")
}
matplot(1:mtry,cbind(test.err,oob.err),pch=19,col=c("red","blue"),type="b",ylab="Mean Squared Error")
for(mtry in 1:7){
fit=randomForest(Happy~.,data=train[3:112],subset=train.sample,mtry=mtry,ntree=400)
oob.err[mtry]=fit$mse[400]
pred=predict(fit,train[-train.sample,])
test.err[mtry]=with(train[-train.sample,],mean((Happy-pred)^2))
cat(mtry," ")
}
matplot(1:mtry,cbind(test.err,oob.err),pch=19,col=c("red","blue"),type="b",ylab="Mean Squared Error")
legend("topright",legend=c("OOB","Test"),pch=19,col=c("red","blue"))
require(gbm)
install.packages("gbm")
library("gbm", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
boost.happy=gbm(Happy~.,data=train[train.sample,],distribution="binomial",n.trees=10000,shrinkage=0.01,interaction.depth=4)
boost.happy=gbm(Happy~.,data=train[train.sample,],distribution="bernoulli",n.trees=10000,shrinkage=0.01,interaction.depth=4)
summary(boost.happy)
plot(boost.boston,i="rm")
plot(boost.happy,i="lstat")
plot(boost.happy)
n.trees=seq(from=100,to=10000,by=100)
predmat=predict(boost.happy,newdata=train[-train.sample,],n.trees=n.trees)
dim(predmat)
berr=with(train[-train.sample,],apply( (predmat-Happy)^2,2,mean))
plot(n.trees,berr,pch=19,ylab="Mean Squared Error", xlab="# Trees",main="Boosting Test Error")
abline(h=min(test.err),col="red")
setwd("C:/edX/MITx_15-071x-TheAnalyticsEdge")
flower = read.csv("flower.csv", header=FALSE)
str(flower)
library("flexclust", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
summary(train)
movies = read.table("movie_lens.txt", header=FALSE, sep="|",quote="\"")
str(movies)
colnames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", "Unknown", "Action", "Adventure", "Animation", "Childrens", "Comedy", "Crime", "Documentary", "Drama", "Fantasy", "FilmNoir", "Horror", "Musical", "Mystery", "Romance", "SciFi", "Thriller", "War", "Western")
str(movies)
movies$ID = NULL
movies$ReleaseDate = NULL
movies$VideoReleaseDate = NULL
movies$IMDB = NULL
movies = unique(movies)
str(movies)
attach(movies)
sum(Comedy)
sum(Western)
sum(Romance*Drama)
summary(train)
setwd("~/GitHub/MITx_15-071x-AnalyticsEdge")
library("caTools" lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("rpart", lib.loc="C:/Program Files/R/R-2.15.1/library")
library("rpart.plot", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("randomForest", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library(flexclust)
require(ISLR)
require(tree)
# Install and load mice package
install.packages("mice")
library(mice)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
install.packages("mice")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
library(mice)
setwd("~/GitHub/MITx_15-071x-AnalyticsEdge")
library("caTools" lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("rpart", lib.loc="C:/Program Files/R/R-2.15.1/library")
library("rpart.plot", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("randomForest", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library(flexclust)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
setwd("~/GitHub/MITx_15-071x-AnalyticsEdge")
setwd("~/GitHub/MITx_15-071x-AnalyticsEdge")
setwd("~/GitHub/AnalyticsEdge")
setwd("~/GitHub/AnalyticsEdge")
library("caTools" lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("rpart", lib.loc="C:/Program Files/R/R-2.15.1/library")
library("rpart.plot", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("randomForest", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library(flexclust)
library("caTools", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
library("rpart", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("rpart.plot", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
library("tree", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
library("ISLR", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
imputedMergedrows <- nrow(imputedMerged)
imputedMerged$Kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$Kids)
imputedMerged$Relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$Relation)
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,1:10])
colnames(imputedMerged[,1:10])
colnames(imputedMerged[,110:112])
newData <- cbind(imputedMerged$UserID,imputedMerged$Happy,imputedMerged$Votes,imputedMerged$Kids,imputedMerged$Relation,imputedMerged[,2:6],imputedMerged[,8:109])
colnames(imputedMerged[,110:112])
newColumnOrder <- 1:112
newColumnOrder <- c(1,7,110:112,2:6,8:109)
newData <- imputedMerged[,newColumnOrder]
head(newData)
colnames(imputedMerged[,1:11])
newColumnOrder <- c(1,8,110:112,2:7,9:109)
newData <- imputedMerged[,newColumnOrder]
head(newData)
newData[newData==""] <- NA
head(newData)
newData2 <- complete(mice(newData))
newColumnOrder <- c(1,8,110:112,2:7,9:109)
newData <- imputedMerged[,newColumnOrder]
head(newData)
attach(newData)
plot(Votes,Happy)
distances = dist(newData, method = "euclidean")
clusterHappy = hclust(distances, method = "ward")
plot(clusterHappy)
clusterGroups = cutree(clusterMovies, k = 8)
clusterGroups = cutree(clusterHappy, k = 8)
tapply(newData$Happy, clusterGroups, mean)
clusterGroups = cutree(clusterHappy, k = 2)
tapply(newData$Happy, clusterGroups, mean)
colnames(imputedMerged[,1:11])
colnames(newData)[1:10]
colnames(newData)[1:11]
summary(newData[,1:11])
distances = dist(newData[,3:11], method = "euclidean")
clusterHappy = hclust(distances, method = "ward")
plot(clusterHappy)
clusterGroups = cutree(clusterHappy, k = 2)
tapply(newData$Happy, clusterGroups, mean)
plot(Votes,Happy)
plot(newData$Votes,newData$Happy)
summary(newData$Votes)
summary(newData$Happy)
hist(newData$Votes)
typeof(newData$Votes)
typeof(newData[,1:11])
typeof(newData[,1])
typeof(newData[,2])
typeof(newData[,3])
typeof(newData[,4])
typeof(newData[,5])
typeof(newData[,6])
typeof(newData[,7])
typeof(newData[,8])
typeof(newData[,9])
typeof(newData[,10])
typeof(newData[,11])
summary(newData[,3])
colnames(newData[,1:20])
train <- newData[1:4619,]
test <- newData[4620:6599,]
tree.happy=tree(Happy~. ,data=train)
?tree
tree.happy=tree(Happy~. ,data=train)
plot(tree.happy)
summary(tree.happy)
text(tree.happy,pretty=0)
tree.happy
test.pred=predict(tree.happy,newdata=test)
table(test.pred,test$Happy)
table(1*(test.pred>.5),test$Happy)
(234+978)/(234+978+686+82)
trainCART = rpart(Happy~., data=train, method="class")
testCART = predict(trainCART,newdata=test)
table(1*(testCART>.5),test$Happy)
table(1*(test.pred[,2]>.5),test$Happy)
table(1*(testCART[,2]>.5),test$Happy)
(388+859)/(388+859+532+201)
plot(testCART,test.pred)
test.pred=predict(tree.happy,newdata=test)
plot(testCART,test.pred)
plot(testCART[.2],test.pred)
head(testCART)
plot(testCART[,2],test.pred)
?rpart
?predict
trainLOG <- glm(Happy~., data=train)
testLOG <- predict.glm(trainLog,newdata=train)
testLOG <- predict.glm(trainLOG,newdata=train)
summary(trainLOG)
summary(newData[,1:11])
newColumnOrder <- c(1,8,110:112,2:4,6:7,9:109) # removing Household Status, redundant w/ Kids and Relation
newData <- imputedMerged[,newColumnOrder]
colnames(newData)[1:11]
train <- newData[1:4619,]
test <- newData[4620:6599,]
attach(train)
tree.happy=tree(Happy~. ,data=train)
plot(tree.happy)
summary(tree.happy)
text(tree.happy,pretty=0)
tree.happy
test$Happy <- rep(NA,1980)
test.pred=predict(tree.happy,newdata=test)
table(1*(test.pred[,2]>.5),test$Happy)
table(1*(test.pred>.5),test$Happy)
test.pred=1*(predict(tree.happy,newdata=test)>.5)
table(test.pred,test$Happy)
test$Happy <- newData$Happy[4620:6599]
table(test.pred,test$Happy)
trainCART = rpart(Happy~., data=train, method="class")
trainCART = rpart(Happy~., data=train, method="class")
testCART = predict(trainCART,newdata=test)
table(1*(testCART[,2]>.5),test$Happy)
masterPred <- apply(cbind(test$Happy,predict(tree.happy,newdata=test),testCART[,2]),1,mean)
table(testLOG,test$Happy)
table(1*(testLOG>.5),test$Happy)
testLOG <- predict.glm(trainLOG,newdata=test)
trainLOG <- glm(Happy~., data=train)
summary(trainLOG)
testLOG <- predict.glm(trainLOG,newdata=test)
table(1*(testLOG>.5),test$Happy)
(565+855)/1980
(565+855)/(565+855+355+205)
glmCSV <- cbind(test$UserID,testLOG)
colnames(glmCSV)
colnames(glmCSV) <- c("UserID","Probability1")
head(glmCSV)
write.csv(glmCSV,"glm.csv")
summary(glmCSV)
testLOG <- min(0.9999,max(0.0001,predict.glm(trainLOG,newdata=test)))
table(1*(testLOG>.5),test$Happy)
testLOG <- min(max(predict.glm(trainLOG,newdata=test),0.0001),.9999)
testLOG <- predict.glm(trainLOG,newdata=test)
testLOG[testLOG>=1] <- 0.9999
testLOG[testLOG<=0] <- 0.0001
table(1*(testLOG>.5),test$Happy)
(565+855)/(565+855+355+205)
glmCSV <- cbind(test$UserID,testLOG)
colnames(glmCSV) <- c("UserID","Probability1")
head(glmCSV)
write.csv(glmCSV,"glm.csv")
?write.csv
write.csv(glmCSV,"glm.csv",row.names=F)
testTree <- predict(tree.happy,newdata=test
masterPred <- apply(cbind(testTree,testCART[,2],testLOG),1,mean)
masterPred <- apply(cbind(testTree,testCART[,2],testLOG),1,mean)
testCARTpred <- testCART[,2]
masterPred <- apply(cbind(testTree,testCARTpred,testLOG),1,mean)
testTree <- predict(tree.happy,newdata=test
testTree <- predict(tree.happy,newdata=test)
testTree <- predict(tree.happy,newdata=test)
masterPred <- apply(cbind(testTree,testCARTpred,testLOG),1,mean)
masterPred <- cbind(test$UserID,masterPred)
colnames(masterPred)
colnames(masterPred) <- c("UserID","Probability1")
write.csv(masterPred,"master.csv")
table(1*(masterPred[,2]>.5),test$Happy)
(435+895)/1980
masterPred <- apply(cbind(testCARTpred,testLOG),1,mean)
masterPred <- cbind(test$UserID,masterPred)
table(1*(masterPred[,2]>.5),test$Happy)
(435+895)/1980
(472+876)/1980
colnames(masterPred) <- c("UserID","Probability1")
write.csv(masterPred,"master.csv")
write.csv(masterPred,"master.csv",rownames=F)
write.csv(masterPred,"master.csv",row.names=F)
