set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:240],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200])
phi_m <- .65 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A/12 # *(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200])
converged <- rolling_inflation>=1.03
apply(converged,2,sum)[1:500] # 0.95 converged after 27 months, 0.99 converged after 84 months, 0.9925 after 84 months, 0.995 after 154 months, 0.999 after 379 months
phi_m <- .99 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A/12 # *(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
# log_inflation <- log_inflation/100.0 # DIVIDE BY 100
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200])
converged <- rolling_inflation>=1.03
apply(converged,2,sum)[1:500] # 0.95 converged after 27 months, 0.99 converged after 84 months, 0.9925 after 84 months, 0.995 after 154 months, 0.999 after 379 months
phi_m <- .45 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A/12 # *(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
# log_inflation <- log_inflation/100.0 # DIVIDE BY 100
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200])
hist(rolling_inflation[,1200],buckets=7)
?hist
hist(rolling_inflation[,1200],breaks=7)
hist(rolling_inflation[,12],breaks=7)
hist(rolling_inflation[,1200],breaks=7)
phi_m <- .90 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A/12 # *(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
sigmaSq_m <- sigmaSq_A*(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,14:25],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,26:37],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200],breaks=7)
hist(rolling_inflation[,12],breaks=7)
varPC2 <- 21.98/10000
expPC2 <- 0
sigmaPC2 <- sqrt(varPC2)
sigma_logPC2 <- sqrt(log(1 + varPC2))
mean_logPC2 <- log(1-varPC2/2)
system.time(simPC2 <- read.csv("~/model data/PCA/pc2sim_50yr_1114.csv"))
system.time(simPC2b <- read.csv("~/model data/PCA/pc2sim_50yr_20140226.csv")) #/model data/PCA/pc2sim_50yr_1114.csv"))
simPC2 <- simPC2[,2:601]
simPC2b <- simPC2b[,2:601]
simPC2 <- cbind(simPC2,simPC2b)
rm(simPC2b)
log_pc2 <- log(1+simPC2)
#log_pc2 <- 100*log_pc2 # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
#remove(simPC2)
lpc2<-mean(apply(log_pc2,2,mean))
expected_InflA <- .03                                    # Expected annual inflation, was .03
variance_InflA <- .0152**2                             # Variance of annual inflation, as square of expected volatility, MULT BY 100^2
sigmaSq_A <- log(1+variance_InflA/(1+expected_InflA)^2) # variance of log annual return
mu_A <- log(1+expected_InflA)- sigmaSq_A/2              # expected log annual return
phi_m <- .90 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A*(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
# log_inflation <- log_inflation/100.0 # DIVIDE BY 100
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,14:25],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,26:37],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200],breaks=7)
hist(rolling_inflation[,12],breaks=7)
hist(rolling_inflation[,24],breaks=7)
converged <- rolling_inflation>=1.03
apply(converged,2,sum)[1:500] # 0.95 converged after 27 months, 0.99 converged after 84 months, 0.9925 after 84 months, 0.995 after 154 months, 0.999 after 379 months
cor(as.vector(t(inflation)),as.vector(t(simPC2))) #s/b ca. 0.30
cor(as.vector(t(inflation[,2:1200])),as.vector(t(inflation[,1:1199])))
write.csv(cumulative_inflation,file="cumulative_inflation_100yr_20140429_moving.csv") #inflation_factor_50yr_20140226.csv") #inflation_factor_50yr_1205.csv")
getwd()
infl_03a <- read.csv("inflation_factor_50yr_1205.csv")[,2:601]
infl_03b <- read.csv("inflation_factor_50yr_20140226.csv")[,2:601]
infl_03 <- cbind(infl_03a,infl_03b)
rm(infl_03a)
rm(infl_03b)
max(apply(infl_03a,1,mean))
sim_infl_045 <- read.csv("inflation_factor_100yr_20140417.csv")[,2:1201]
getwd()
setwd("C:/Users/Anichini/Documents")
head(sim_infl_045)
infl_equi <- sim_infl_045[sim_infl_045>=1.03]
max(sim_infl_045)
max(med_infl)
plot(med_infl)
mean_infl <- apply(sim_infl_045,2,mean)
med_infl[!is.na(match(med_infl,med_infl>=1.03))]
phi_m <- .45 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A*(1 - phi_m^2)/12 # - beta_PC2^2)/12                 # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
# log_inflation <- log_inflation/100.0 # DIVIDE BY 100
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,14:25],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,26:37],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
hist(rolling_inflation[,1200],breaks=7)
hist(rolling_inflation[,12],breaks=7)
hist(rolling_inflation[,24],breaks=7)
converged <- rolling_inflation>=1.03
apply(converged,2,sum)[1:500] # 0.95 converged after 27 months, 0.99 converged after 84 months, 0.9925 after 84 months, 0.995 after 154 months, 0.999 after 379 months
cor(as.vector(t(inflation)),as.vector(t(simPC2))) #s/b ca. 0.30
cor(as.vector(t(inflation[,2:1200])),as.vector(t(inflation[,1:1199])))
hist(rolling_inflation[,24],breaks=7)
hist(rolling_inflation[,1200],breaks=7)
annual_cols <- (1:100)*12
annual_inflation <- rolling_inflation[,annual_cols]
hist(annual_inflation[,100],breaks=7)
hist(annual_inflation[,1],breaks=7)
hist(annual_inflation[,2],breaks=7)
hist(annual_inflation[,3],breaks=7)
hist(annual_inflation[,4],breaks=7)
hist(annual_inflation[,5],breaks=7)
hist(annual_inflation[,50],breaks=7)
hist(annual_inflation[,5],breaks=7)
hist(annual_inflation[,50],breaks=7)
hist(annual_inflation[,50],breaks=7,plot=F)
hist(annual_inflation[,1],breaks=7,plot=F)
hist(annual_inflation[,1],breaks=3,plot=F)
hist(annual_inflation[,1],breaks=9,plot=F)
hist(annual_inflation[,2],breaks=9,plot=F)
hist(annual_inflation[,50],breaks=9,plot=F)
hist(apply(annual_inflation,1,sd))
sigmaSq_m <- sigmaSq_A*(1 - phi_m^2- beta_PC2^2)/12 #)/12 #                  # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,14:25],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,26:37],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
annual_cols <- (1:100)*12
annual_inflation <- rolling_inflation[,annual_cols]
hist(apply(annual_inflation,1,sd))
mean(apply(annual_inflation,1,sd))
mean(apply(inflation,1,sd))
phi_m <- .9 # empirically 0.44903                                           # autocorrelation of monthly log changes in CPI, 1990-2012
mu_m <- mu_A/12.0
constant_m <- mu_m*(1-phi_m) # *100  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS /log monthly return constant, given autocorrelation phi: constant/(1-phi)
sigmaSq_m <- sigmaSq_A*(1 - phi_m^2- beta_PC2^2)/12 #)/12 #                  # variance of log monthly return, given autocorrelation f
sigma_m <- sqrt(sigmaSq_m)
beta_PC2 <- 0.29553
#PC2multiplier <- (.21*phi_m)/(0.29553*sqrt(1-.21^2))
beta_ADJ <- beta_PC2*sigma_m/sigma_logPC2 #*PC2multiplier
resid_var <- (1-phi_m^2-beta_ADJ^2)*sigmaSq_m
resid_sigma <-sqrt(resid_var)
set.seed(232) # was 132 for first 50 years
system.time(epsilon <- rnorm(2.4e6,0,resid_sigma))
months <- 1200 #600
paths <-2000
draws <- months*paths
system.time(epsilon <- matrix(epsilon,months,paths))
# epsilon <- 100* epsilon  # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
# remove(inflation)
log_initial_infl <- rep(0.0002,paths) #log(inflation_factor_50yr_1205[,601]) # rep(0.002,paths) # MULTIPLY BY 100 TO MITIGATE ROUNDING ERRORS
log_inflation_paths <- rep(0.0,draws)
log_inflation <- matrix(log_inflation_paths,paths,months)
log_inflation <- cbind(log_initial_infl,log_inflation)
mean(log_inflation[,2])
system.time(for (m in 1:1200){
log_inflation[,m+1] <- constant_m + phi_m*log_inflation[,m] + beta_ADJ*(log_pc2[,m]-mean_logPC2) + epsilon[m,]
})
12*mean(apply(log_inflation[,2:1200],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,2:13],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,14:25],1,mean)) # s/b near .026
12*mean(apply(log_inflation[,26:37],1,mean)) # s/b near .026
rm(inflation)
inflation <- matrix(as.numeric(exp(log_inflation[,2:1201])),nrow=2000,ncol=1200)
cumulative_inflation <- t(apply(inflation,1,cumprod))
mean(cumulative_inflation[,1200])
rolling_inflation <- cumulative_inflation
rolling_inflation[,13:1200] <- cumulative_inflation[,13:1200]/cumulative_inflation[,1:1188]
annual_cols <- (1:100)*12
annual_inflation <- rolling_inflation[,annual_cols]
mean(apply(annual_inflation,1,sd))
hist(annual_inflation[,1],breaks=9,plot=F)
hist(annual_inflation[,2],breaks=9,plot=F)
hist(annual_inflation[,3],breaks=9,plot=F)
hist(annual_inflation[,50],breaks=9,plot=F)
hist(rolling_inflation[,12],breaks=7)
hist(annual_inflation[,1],breaks=9)
hist(annual_inflation[,2],breaks=9)
hist(annual_inflation[,3],breaks=9)
hist(annual_inflation[,4],breaks=9)
hist(annual_inflation[,5],breaks=9)
hist(annual_inflation[,50],breaks=9)
setwd("~/GitHub/AnalyticsEdge")
library("caTools" lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library("rpart", lib.loc="C:/Program Files/R/R-2.15.1/library")
library("rpart.plot", lib.loc="C:/Users/Tom_Anichini/Documents/R/win-library/2.15")
library(flexclust)
require(ISLR)
require(tree)
# Install and load mice package
#install.packages("mice")
library(mice)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test.Happy <- rep(NA,1980)
test <- cbind(test[1:7],test.Happy,test[8:109])
colnames(test)[1:10]
colnames(test) <- c(colnames(test[1:7]),"Happy",colnames(test[9:110]))
colnames(test)[1:10]
merged <- rbind(train,test)
colnames(merged)[1:10]
merged$YOB[merged$YOB==2039] <- NA
set.seed(144)
imputedMerged <- complete(mice(merged))
imputedMergedrows <- nrow(imputedMerged)
imputedMerged$Kids <- rep(0,imputedMergedrows)
kidsStatus <- c("Domestic Partners (w/kids)","Married (w/kids)","Single (w/kids)")
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Domestic Partners (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Married (w/kids)"]=1
imputedMerged$Kids[imputedMerged$HouseholdStatus == "Single (w/kids)"]=1
table(imputedMerged$Kids)
imputedMerged$Relation <- rep(1,imputedMergedrows)
relStatus <- c("Domestic Partners (no kids)","Married (no kids)","Single (no kids)")
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Domestic Partners (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Married (no kids)"]=0
imputedMerged$Relation[imputedMerged$HouseholdStatus == "Single (no kids)"]=0
table(imputedMerged$Relation)
colnames(imputedMerged[,111:112]) <- c("Kids","Relation")
colnames(imputedMerged[,1:11])
predHappy2 <- cbind(imputedMerged$UserID[4620:6599],1*(imputedMerged$Happy[4620:6599]))
head(predHappy2)
#write.csv(predHappy2,"predHappyBin.csv")
newColumnOrder <- c(1,8,110:112,2:4,6:7,9:109) # removing Household Status, redundant w/ Kids and Relation
newData <- imputedMerged[,newColumnOrder]
colnames(newData)[1:11]
summary(newData[,1:11])
attach(newData)
typeof(newData[,1])
typeof(newData[,2])
typeof(newData[,3])
typeof(newData[,4])
typeof(newData[,5])
typeof(newData[,6])
typeof(newData[,7])
typeof(newData[,8])
typeof(newData[,9])
typeof(newData[,10])
typeof(newData[,11])
summary(newData[,3])
colnames(newData[,1:20])
train <- newData[1:4619,]
test <- newData[4620:6599,]
library("designGG", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
library(languageR)
library(Party)
library(party)
data.controls <- cforest_unbiased(ntree=10, mtry=3)
set.seed(47)
data.cforest <- cforest(Happy ~ ., data = train, controls=data.controls)
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=data.controls) )
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=10, mtry=3)) )
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=100, mtry=3)) )
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=100, mtry=4)) )
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=100, mtry=5)) )
system.time(data.cforest <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=500, mtry=5)) )
pred.rf <- predict(data.cforest,newdata=test,type="class")
pred.rf <- predict(data.cforest,newdata=test,type="prob")
table(1*(pred.rf>.5),test$Happy)
(927+383)/1980
system.time(data.cforest10 <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=10, mtry=5)) )
table(1*(pred.rf10>.5),test$Happy)
pred.rf10 <- predict(data.cforest10,newdata=test,type="prob")
table(1*(pred.rf10>.5),test$Happy)
(861+445)/1980
trainLOG <- glm(Happy~., data=train)
summary(trainLOG)
testLOG <- predict.glm(trainLOG,newdata=test)
table(1*(testLOG>.5),test$Happy)
table(1*(pred.rf>.5),1*(testLOG>.5))
(1171+477)/1980
system.time(data.cforest1000 <- cforest(Happy ~ ., data = train, controls=cforest_unbiased(ntree=1000, mtry=5)) )
pred.rf1000 <- predict(data.cforest1000,newdata=test,type="prob")
table(1*(pred.rf1000>.5),test$Happy)
table(1*(pred.rf1000>.5),1*(testLOG>.5))
head(pred.rf1000)
dim(pred.rf1000)
str(pred.rf1000)
mean(pred.rf1000     )
(pred.rf1000[1:10]
pred.rf1000[1:10]
typeof(pred.rf1000)
predrf1k <- unlist(pred.rf1000)
mean(predrf1k)
predrf1k <- cbind(test$UserID,predrf1k)
colnames(predrf1k) <- c("UserID","Probability1")
head(predrf1k     )
write.csv(predrf1k,"predrf1k.csv",row.names=F)
getwd()
